{"version":3,"sources":["auth/Create.js","auth/Login.js","auth/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["Create","useState","step","setStep","useForm","mode","watch","register","handleSubmit","getValues","formState","errors","isValid","onSubmit","console","log","JSON","stringify","className","htmlFor","type","id","name","email","ref","required","value","message","telephone","password","disabled","onClick","cur","Login","loginEmail","loginPassword","Dashboard","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10f8a1fe.chunk.js","sourcesContent":["import React, {useState, Fragment} from 'react'\r\nimport {useForm} from 'react-hook-form'\r\nimport './authStyles/authStyles.css'\r\n\r\n\r\n\r\nfunction Create() {\r\n    const [step, setStep] = useState(0)\r\n    const { watch, \r\n            register,\r\n            handleSubmit, \r\n            getValues, \r\n            formState:{errors, isValid}} = useForm({mode: 'all'})\r\n    const nextLevel = () =>{\r\n        setStep(cur => cur + 1)\r\n    }\r\n\r\n    const submitThisForm = () =>{\r\n        console.log(JSON.stringify(watch(), null, 2))\r\n    }\r\n\r\n     return (\r\n        <Fragment>\r\n            <form onSubmit={handleSubmit(submitThisForm)}>\r\n                <h1>Create Account - Get Started</h1>\r\n                {step >= 0 && (\r\n                <section className={step === 0 ? 'block' : 'hidden'}>\r\n                    <div>\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"email\" \r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            className={errors.email && 'error__class'}\r\n                            ref={register({\r\n                                required:{\r\n                                    value: true,\r\n                                    message: \"Email is Required\"\r\n                                }\r\n                            })}\r\n                        />\r\n                        {errors.email && <p>{errors.email.message}</p>}\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"telephone\">Phone Number</label>\r\n                        <input\r\n                            type=\"tel\"\r\n                            id=\"telephone\" \r\n                            name=\"telephone\"\r\n                            className={errors.telephone && 'error__class'}\r\n                            ref={register({\r\n                                required:{\r\n                                    value: true,\r\n                                    message: \"Phone Number is Required\"\r\n                                }\r\n                            })}                 \r\n                        />\r\n                        {errors.telephone && <p>{errors.telephone.message}</p>}\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"password\" \r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            className={errors.password && 'error__class'}\r\n                            ref={register({\r\n                                required:{\r\n                                    value: true,\r\n                                    message: \"Password is Required\"\r\n                                }\r\n                            })}                        \r\n                        />\r\n                        {errors.password && <p>{errors.password.message}</p>}\r\n                    </div>\r\n                    <button disabled={!isValid} onClick={nextLevel} type=\"submit\">Create Account</button>\r\n                </section>\r\n                )}\r\n                {step >= 1 && (\r\n                <section className={step === 1 ? 'block' : 'hidden'}>\r\n                    <div>\r\n                        <p>We sent an email to <b>{getValues(\"email\")}</b></p>\r\n                    </div>\r\n                </section>\r\n                )}\r\n            </form>\r\n            <pre>{JSON.stringify(watch(), null, 2)}</pre>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Create\r\n","import React, {Fragment} from 'react'\r\nimport {useForm} from 'react-hook-form'\r\nimport './authStyles/authStyles.css'\r\n\r\nfunction Login() {\r\n    const { watch, \r\n        register,\r\n        handleSubmit, \r\n        getValues, \r\n        formState:{errors, isValid}} = useForm({mode: 'all'})\r\n\r\n    const loginWithThisForm = () =>{\r\n            console.log(JSON.stringify(watch(), null, 2))\r\n        }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1>Log In Form</h1>\r\n            <form onSubmit={handleSubmit(loginWithThisForm)}>\r\n                <div className=\"\">\r\n                    <label htmlFor=\"loginEmail\">Email</label>\r\n                    <input \r\n                        name=\"loginEmail\"\r\n                        type=\"email\"\r\n                        id=\"loginEmail\"\r\n                        ref={\r\n                            register({\r\n                                required:({\r\n                                    value: true,\r\n                                    message: \"Email is Required\"\r\n                                })\r\n                            })\r\n                        }\r\n                        />\r\n                    {errors.loginEmail && <p>{errors.loginEmail.message}</p>}\r\n                </div>\r\n                <div className=\"\">\r\n                    <label htmlFor=\"loginPassword\">Password</label>\r\n                    <input \r\n                        name=\"loginPassword\"\r\n                        type=\"password\"\r\n                        id=\"loginPassword\"\r\n                        ref={register({\r\n                            required:{\r\n                                value: true,\r\n                                message: \"Password is Required\"\r\n                            }\r\n                        })} \r\n                        />\r\n                    {errors.loginPassword && <p>{errors.loginPassword.message}</p>}\r\n                </div>\r\n                <button disabled={!isValid} type=\"submit\">Sign In</button>\r\n            </form>\r\n            <pre>{JSON.stringify(watch(), null, 2)}</pre>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\n\r\nfunction Dashboard() {\r\n    return (    \r\n        <div>\r\n                <h1>User Dashboard</h1>\r\n                <p>Welcome, X User</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n    ","//import react from 'react'\n//import {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport Create from './auth/Create'\nimport Login from './auth/Login'\nimport Dashboard from './auth/Dashboard'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>LS - React Test</h1>\n      <Create/>\n      <Login/>\n      <Dashboard/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}